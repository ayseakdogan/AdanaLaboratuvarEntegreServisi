<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        DwAAAk1TRnQBSQFMAwEBAAEIAQABCAEAATIBAAEyAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        AcgDAAEyAwABAQEAAQgFAAEQAScYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAMv+WAAzzBPIC8Qfy
        DPMB8AO8AfAI85YACP8B9AHyAfABvAIHB+8DBwG8AfAB8QHyAfMF/wH0AvIB8wHxAfAB8QHzAvIG/5YA
        BfQB8wHyAQcB9wHrAW0BbAHrAZEB6wGRAesCbAFtAfgH7AH3AbwB8gL0AbwB8AG8AXIFTwHtAfAC8QT0
        lgAE/wHzAbwBkgHrDpEB6wHtAesDkQHrAZIB8QH0AbwB8QHvAU4BVQV3AVUBTwEHAfIB8QP/lgAC/wH0
        AfEBBwHrA5EBbAORAWwDkQFsApEBbAKRAusFkQEHAbwBBwHvAU4BVQJ3A5cCdwFVAU4BBwG8AfQC/5YA
        Av8B8gG8AZEBiwORApADbAGQD5EBvAHvAQcBTgFVAncB5AG8Au4B5AJ3AVUBTgG8AQcC/5YAAf8B9AKR
        AZIFkQGQAWYDkQFsA5EBiweRAYsC9wEHAe8BTwFOA3cBlwK8Ae4B5AJ3AVUBTgGYAQcC/5YAAf8B9QP3
        AZEBixGRAYsEkQH3Ae8BBwJOBHcC8AG8AZcDdwJOAgcB/5YAAv8B9wGRCfcBkQP3AZEF9wGSAvcBkQP3
        Ae8B8gJOAXEBkQHsAZEC8QHwAewBkQFyAXECTgG8Ae8B/5YAAv8BuwGRAfcCuwH3AZEBuwH3AbQE9wO7
        AZEBuwL3AZEBuwH3ArsC9wHvAfQCTgFPAvQB8wLyAvEB8AG8AU8CTgHxAe8B/5YAAv8C9xq7Ae8B9AEC
        AU4BTwH/A/QB8wLyAfEB8AFPAU4BAgHxAe8B/5YAAv8B9wO7Au4BBwS7AZEBuwHuAbsBtAPuAbQIuwHv
        AfIBTgFPAnECdwP0A3cCTwECAQcB7wH/lgAC/wHyArsBCQK8AbsBvAHwAfEB8AG8AbsBCAK8AQgECQO7
        AbQDuwHtAQcCTwJxAncC/wH0A3cBcQFPAUkBBwH0Af+WAAP/ArwD8AHxAhkB8AEZAfIB8QHwAbwC8AEJ
        A/AEvAEJAbwB9wGRAe8BBwJyA5cD/wOXAnIBCAEHAv+WAAP/A/ADGQHwAxkBuwEZAfIBGQEIARkC8QG7
        AhkF8AGLAZEB7wHuAU8BlwOdA/MDnQGXAUkB8AHzAv+WAAP/ARkD8gHzAbsB8gH0ARoBdAL0AbsB8gHz
        BPIEGQG7ARkBuwGRArsBBwHwAXIJmAFJAfIB8AHzAv+WAAP/AbwB8wIZA/MB9AN1ARoB9QHwARkB8wEZ
        AvMBGQLzAhkBuwGRAbsB9wKRAbwB8gESB5gBcgHyAfEB8AHxAfQB/5YAA/8B9QQZAfAC8wV6Af8B9AMZ
        AbsFGQG7AfcBuwKRAYsBkQHuAfIB8QHsAkkBEgHsAfMB8gEHAfcB8AHxAfIB/5YABf8BGQT0ARoGegH/
        ArsC9AIZAfQB4gG7AZEBuwH3AZED9wKRAQcC8gLxAfIBBwGRAvcB8AHxAfIB9JYAB/8BGQEJAfUBGgZ6
        AZoB9QL0ARkC9AHwAfcFuwH3ArsE9wG0BPcCuwH3AfEB8gHzAf+WAAf/AZkB/wH0AfMCdAF6A5oBeQGZ
        Ae4CGQGRCbsB9wW7AbUB9wa7AfIB8wH0Af+WAAf/AXkBmQH1Af8CmQGaAxoDmQEHARkC8AG7AvABuwLw
        Ae4D8AG7AfACvAEJBLwBuwHwAe4B9AH1Av+WAAf/AlEBUgFzAVICdAOaA1IBeQGZAQgBtQXuAQgC7gEJ
        A+4BuwHwAbsBCQLuAQkBCAK7BP+WAAb/ARoEHAMaAZkCGgWZAbwO8gEZBvIBGQH0BP+WAAb/AVIDSwGa
        BHoBmgFvAVIDUQFYB/ABCQHwAfQB8gG7AbwC8AEJBvABuwX/lgAG9QF0AXMBdAeaAZkEeQGZAfED8gG8
        AfIBvAHzBfQB8AG8AvIBCQLyARkB8Ab1lgAF/wH2AVEBKgFSAXoFmgF6AXQBUgFYAlIBWAH2AQkB8gHu
        AfIB8AH0A3QBkwG9Av8BuwHyAQkDGQEJB/+WAAX0ARsBUQFzAZkGmgGZAZMFeQEbAvQC8AHzAZkDdAGT
        AhoC9AHwAfEB9wEJAfMI9JYABf8BmQEqAVEBegeaAXQBWAF6AVgBeQFYAfYE/wEaAXoEdAGTAhoC9AG7
        AbwK/5YABfMBeQFLAXQHmgGZA3kBWAJ5BPMBmQN6AZoBmQJ0AhoBdA3zlgAF/wF5AUsBdAF6B5oBegFY
        AXkDWAT/B3oBmgG9ARoBdA3/lgAF8gGZAUsCdAaZAXQBUgF5AVgBeQFYAXkD8gEaB3QBeQGZARoBHA3y
        lgAF/wEaAUsBdAKaBBoBmgF6AVgB5QF6AaABegGaA/8BmgN6BpoCGg3/lgAF8wEbAVEBdAF6ApoCGgOZ
        AXkBmQN5AZkD8wF6AnUBegSaAnoBmgHsDfOWAAb/AXkBdAF6BRoBwwGaAZkBoAHDAXoBeQHDA/8Begqa
        AZkB9gz/lgAG9AF5AUsBdAQaARsBGgGZARsCGgGZAZoE9AF6CZoBegGaAQ4M9JYAB/8BeQF0AZoBGgGa
        AaABmgHDAfYDwwGaAcME/weaAhoBRAKaAUQBvAv/lgAH9AGZA3kBegF5AVICmgGZARoBmgEbBfQBegWa
        AxoBCwFuARoBIgEOC/SWAAj/AZkBmgF5AVgBeQJ6AVgCegGgAfYF/wF6ApoGGgEiAgsCDgv/lgAJ/wHD
        AaABmgJYAXoCWAF6AfYG/wF6AZoGGgQiAQsBDgv/lgAM/wEbAhoK/wF6BhoCIwQiAQsL/5YAGf8BegYa
        AyMDIgELC/+WABj/AUoDSwF0AxoBSwJEASMCIgHqC/+WABj/AfECSwGaAXQCUgF0AksBSgFEASMBIgHz
        C/+WABn/ARwBSwZRAksBSgFEASMM/5YAGv8BGwFzBnQBcwFLAUoBBwz/lgAc/wF0AVEEdAFLAW4O/5YA
        Mv+WADL/lgABQgFNAT4HAAE+AwABKAMAAcgDAAEyAwABAQEAAQEFAAF4AQUWAAP//wD/AP8A/wD/AH4A
        Cw==
</value>
  </data>
</root>